# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 1  # number of classes, default 80
depth_multiple: 0.33  # model depth multiple  网络深度系数：backbone和head中number参数乘以该系数
width_multiple: 0.50  # layer channel multiple  网络宽度系数：backbone和head中args第一个参数乘以该系数
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  # from: 第一列，代表输入来自哪一层，-1代表上一层，n代表第n层
  # number: 表示该模块重复的次数
  # module: 模块名称
  # args: 表示输入参数，比如卷积核个数 卷积核大小 步长stride等
  # C3模块中的number相当于Bottleneck的数量
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2  # 第0层 # 原为Focus层，后被用6*6卷积核卷积代替
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4  # 第1层
   [-1, 3, C3, [128]],  # 第2层
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8  # 第3层
   [-1, 6, C3, [256]],  # 第4层
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16 # 第5层
   [-1, 9, C3, [512]],  # 第6层
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32  # 第7层
   [-1, 3, C3, [1024]], # 第8层
   [-1, 1, SPPF, [1024, 5]],  # 9 # 第9层
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 第10层
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 第11层
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4  # 第12层
   [-1, 3, C3, [512, False]],  # 13 # 第13层

   [-1, 1, Conv, [256, 1, 1]],  # 第14层
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 第15层  参数1：据不同的输入制定输出大小；参数2：指定输出为输入的倍数；参数3：上采样算法
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3  # 第16层
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)  # 第17层

   [-1, 1, Conv, [256, 3, 2]],  # 第18层
   [[-1, 14], 1, Concat, [1]],  # cat head P4 # 第19层
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)  # 第20层

   [-1, 1, Conv, [512, 3, 2]],  # 第21层
   [[-1, 10], 1, Concat, [1]],  # cat head P5 # 第22层
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)  # 第23层

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
